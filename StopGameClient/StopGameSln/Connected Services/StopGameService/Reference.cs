//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StopGame.StopGameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TokensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tokens {
            get {
                return this.TokensField;
            }
            set {
                if ((this.TokensField.Equals(value) != true)) {
                    this.TokensField = value;
                    this.RaisePropertyChanged("Tokens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StopGameService.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Login", ReplyAction="http://tempuri.org/IUserManager/LoginResponse")]
        StopGame.StopGameService.User Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Login", ReplyAction="http://tempuri.org/IUserManager/LoginResponse")]
        System.Threading.Tasks.Task<StopGame.StopGameService.User> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Register", ReplyAction="http://tempuri.org/IUserManager/RegisterResponse")]
        bool Register(StopGame.StopGameService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/Register", ReplyAction="http://tempuri.org/IUserManager/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(StopGame.StopGameService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ExistsEmailOrUserName", ReplyAction="http://tempuri.org/IUserManager/ExistsEmailOrUserNameResponse")]
        bool ExistsEmailOrUserName(string userName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ExistsEmailOrUserName", ReplyAction="http://tempuri.org/IUserManager/ExistsEmailOrUserNameResponse")]
        System.Threading.Tasks.Task<bool> ExistsEmailOrUserNameAsync(string userName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SendValidationEmail", ReplyAction="http://tempuri.org/IUserManager/SendValidationEmailResponse")]
        bool SendValidationEmail(string toEmail, string affair, int validationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/SendValidationEmail", ReplyAction="http://tempuri.org/IUserManager/SendValidationEmailResponse")]
        System.Threading.Tasks.Task<bool> SendValidationEmailAsync(string toEmail, string affair, int validationCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : StopGame.StopGameService.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<StopGame.StopGameService.IUserManager>, StopGame.StopGameService.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StopGame.StopGameService.User Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<StopGame.StopGameService.User> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public bool Register(StopGame.StopGameService.User user) {
            return base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(StopGame.StopGameService.User user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public bool ExistsEmailOrUserName(string userName, string email) {
            return base.Channel.ExistsEmailOrUserName(userName, email);
        }
        
        public System.Threading.Tasks.Task<bool> ExistsEmailOrUserNameAsync(string userName, string email) {
            return base.Channel.ExistsEmailOrUserNameAsync(userName, email);
        }
        
        public bool SendValidationEmail(string toEmail, string affair, int validationCode) {
            return base.Channel.SendValidationEmail(toEmail, affair, validationCode);
        }
        
        public System.Threading.Tasks.Task<bool> SendValidationEmailAsync(string toEmail, string affair, int validationCode) {
            return base.Channel.SendValidationEmailAsync(toEmail, affair, validationCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StopGameService.IGameServices", CallbackContract=typeof(StopGame.StopGameService.IGameServicesCallback))]
    public interface IGameServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/NewRoom", ReplyAction="http://tempuri.org/IGameServices/NewRoomResponse")]
        bool NewRoom(string hostUserName, string roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/NewRoom", ReplyAction="http://tempuri.org/IGameServices/NewRoomResponse")]
        System.Threading.Tasks.Task<bool> NewRoomAsync(string hostUserName, string roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/GenerateRoomCode", ReplyAction="http://tempuri.org/IGameServices/GenerateRoomCodeResponse")]
        string GenerateRoomCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/GenerateRoomCode", ReplyAction="http://tempuri.org/IGameServices/GenerateRoomCodeResponse")]
        System.Threading.Tasks.Task<string> GenerateRoomCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/Connect", ReplyAction="http://tempuri.org/IGameServices/ConnectResponse")]
        void Connect(string userName, string roomId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/Connect", ReplyAction="http://tempuri.org/IGameServices/ConnectResponse")]
        System.Threading.Tasks.Task ConnectAsync(string userName, string roomId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/Disconnect", ReplyAction="http://tempuri.org/IGameServices/DisconnectResponse")]
        void Disconnect(string userName, string roomId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServices/Disconnect", ReplyAction="http://tempuri.org/IGameServices/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(string userName, string roomId, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameServices/SendMessage")]
        void SendMessage(string message, string userName, string roomId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameServices/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string message, string userName, string roomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServicesCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameServices/MessageCallBack")]
        void MessageCallBack(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServicesChannel : StopGame.StopGameService.IGameServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServicesClient : System.ServiceModel.DuplexClientBase<StopGame.StopGameService.IGameServices>, StopGame.StopGameService.IGameServices {
        
        public GameServicesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServicesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool NewRoom(string hostUserName, string roomId) {
            return base.Channel.NewRoom(hostUserName, roomId);
        }
        
        public System.Threading.Tasks.Task<bool> NewRoomAsync(string hostUserName, string roomId) {
            return base.Channel.NewRoomAsync(hostUserName, roomId);
        }
        
        public string GenerateRoomCode() {
            return base.Channel.GenerateRoomCode();
        }
        
        public System.Threading.Tasks.Task<string> GenerateRoomCodeAsync() {
            return base.Channel.GenerateRoomCodeAsync();
        }
        
        public void Connect(string userName, string roomId, string message) {
            base.Channel.Connect(userName, roomId, message);
        }
        
        public System.Threading.Tasks.Task ConnectAsync(string userName, string roomId, string message) {
            return base.Channel.ConnectAsync(userName, roomId, message);
        }
        
        public void Disconnect(string userName, string roomId, string message) {
            base.Channel.Disconnect(userName, roomId, message);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(string userName, string roomId, string message) {
            return base.Channel.DisconnectAsync(userName, roomId, message);
        }
        
        public void SendMessage(string message, string userName, string roomId) {
            base.Channel.SendMessage(message, userName, roomId);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string message, string userName, string roomId) {
            return base.Channel.SendMessageAsync(message, userName, roomId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StopGameService.IUpdateProfile")]
    public interface IUpdateProfile {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateProfile/SaveImage", ReplyAction="http://tempuri.org/IUpdateProfile/SaveImageResponse")]
        bool SaveImage(string imageManager, int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateProfile/SaveImage", ReplyAction="http://tempuri.org/IUpdateProfile/SaveImageResponse")]
        System.Threading.Tasks.Task<bool> SaveImageAsync(string imageManager, int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateProfile/UpdateNewUserName", ReplyAction="http://tempuri.org/IUpdateProfile/UpdateNewUserNameResponse")]
        bool UpdateNewUserName(string userName, string newUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateProfile/UpdateNewUserName", ReplyAction="http://tempuri.org/IUpdateProfile/UpdateNewUserNameResponse")]
        System.Threading.Tasks.Task<bool> UpdateNewUserNameAsync(string userName, string newUserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpdateProfileChannel : StopGame.StopGameService.IUpdateProfile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProfileClient : System.ServiceModel.ClientBase<StopGame.StopGameService.IUpdateProfile>, StopGame.StopGameService.IUpdateProfile {
        
        public UpdateProfileClient() {
        }
        
        public UpdateProfileClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpdateProfileClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateProfileClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateProfileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SaveImage(string imageManager, int idProfile) {
            return base.Channel.SaveImage(imageManager, idProfile);
        }
        
        public System.Threading.Tasks.Task<bool> SaveImageAsync(string imageManager, int idProfile) {
            return base.Channel.SaveImageAsync(imageManager, idProfile);
        }
        
        public bool UpdateNewUserName(string userName, string newUserName) {
            return base.Channel.UpdateNewUserName(userName, newUserName);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNewUserNameAsync(string userName, string newUserName) {
            return base.Channel.UpdateNewUserNameAsync(userName, newUserName);
        }
    }
}
